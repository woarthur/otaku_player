<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:local="clr-namespace:NeteaseCloudMusic.Wpf.Themes"
                    xmlns:ctl="clr-namespace:NeteaseCloudMusic.Wpf.Controls"
                    xmlns:converter="clr-namespace:NeteaseCloudMusic.Wpf.Converter">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorAndBrush.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converter:ScrollViewerVerticalOffsetBottomConverter x:Key="ScrollViewerVerticalOffsetBottomConverter"/>

    <Color x:Key="Color_GrayListbox_Selected">#dddde1</Color>
    <Color x:Key="Color_GrayListbox_Hover">#e8e8eb</Color>

    <SolidColorBrush x:Key="Brush_GrayListbox_Selected" Color="{StaticResource Color_GrayListbox_Selected}"/>
    <SolidColorBrush x:Key="Brush_GrayListbox_Hover" Color="{StaticResource Color_GrayListbox_Hover}"/>


    <!--左侧导航栏的样式设计-->
    <Style x:Key="ListViewNavigationItem" TargetType="ListViewItem">
        <Setter Property="Height" Value="40"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                              Padding="{TemplateBinding Control.Padding}"
                              BorderBrush="{TemplateBinding Border.BorderBrush}"
                              Background="{TemplateBinding Panel.Background}"
                              Name="Bd"
                              SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                               ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                               ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                               HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                               SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" 
                                        Value="#3d71a0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="#385e93"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" 
                                        Value="#3d71a0"/>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <!--<Setter Property="TextElement.Foreground" TargetName="Bd">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewMusicItem" TargetType="ListViewItem">
        <Setter Property="Height" Value="44"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            Name="Bd"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform/>
                        </Border.RenderTransform>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="MouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                        Storyboard.TargetProperty="(Panel.RenderTransform).
                                                                                    (ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.98"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#a0d7e0"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#bee5e6"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" 
                                        Value="#49adc9"/>
                            <!--<Setter Property="Border.BorderBrush" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush>#FFDADADA</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="#4495ba"/>
                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" 
                                        Value="#66c3d1"/>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <!--<Setter Property="TextElement.Foreground" TargetName="Bd">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewAlbumItem" TargetType="ListViewItem">
        <Setter Property="Height" Value="152"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="0 20 0 0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            Name="Bd"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform/>
                        </Border.RenderTransform>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="MouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                        Storyboard.TargetProperty="(Panel.RenderTransform).
                                                                                    (ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.98"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                        Storyboard.TargetProperty="(Panel.RenderTransform).
                                                                                    (ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.98"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewMvItem" BasedOn="{StaticResource ListViewAlbumItem}" TargetType="ListViewItem">
        <Setter Property="Width" Value="176"/>
        <Setter Property="Height" Value="160"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <Grid>
                            <ctl:WheelSpeedScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" x:Name="sv"
                                                        SpeedFactor="1.5">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Width="{TemplateBinding Width}">
                                    <i:Interaction.Behaviors>
                                        <ei:FluidMoveBehavior Duration="0:0:0.3">
                                            <ei:FluidMoveBehavior.EaseY>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </ei:FluidMoveBehavior.EaseY>
                                        </ei:FluidMoveBehavior>
                                    </i:Interaction.Behaviors>
                                </ItemsPresenter>
                            </ctl:WheelSpeedScrollViewer>
                            <!--<Border Height="30" VerticalAlignment="Top" 
                                    x:Name="borderTop"
                                    IsHitTestVisible="False">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                        <GradientStop Color="#22000000" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border Height="30" VerticalAlignment="Bottom" 
                                    x:Name="borderBottom"
                                    IsHitTestVisible="False">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="#22000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <!--<DataTrigger Binding="{Binding ElementName=sv,Path=VerticalOffset}" Value="0">
                            <Setter TargetName="borderTop" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Value="0">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ScrollViewerVerticalOffsetBottomConverter}">
                                    <Binding ElementName="sv" Path="VerticalOffset"/>
                                    <Binding ElementName="sv" Path="ViewportHeight"/>
                                    <Binding ElementName="sv" Path="ExtentHeight"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter TargetName="borderBottom" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>