<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NeteaseCloudMusic.Wpf;component/Themes/Fonts/Font.xaml"/>
        <ResourceDictionary Source="/NeteaseCloudMusic.Wpf;component/Themes/Effect.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="Color_MenuText_Default">#1f1f1f</Color>
    <Color x:Key="Color_MenuText_Select">#1f1f1f</Color>
    <Color x:Key="Color_MenuText_Disable">#555</Color>
    <Color x:Key="Color_MenuSeparator">#e8e8eb</Color>
    <Color x:Key="Color_MenuBackground_Default">White</Color>
    <Color x:Key="Color_MenuBackground_Select">#e6e6e6</Color>
    <Color x:Key="Color_MenuBorderbrush_Default">#eee</Color>

    <!--Menu-->
    <SolidColorBrush x:Key="Brush_MenuText_Default" Color="{StaticResource Color_MenuText_Default}"/>
    <SolidColorBrush x:Key="Brush_MenuText_Select" Color="{StaticResource Color_MenuText_Select}"/>
    <SolidColorBrush x:Key="Brush_MenuText_Disable" Color="{StaticResource Color_MenuText_Disable}"/>

    <SolidColorBrush x:Key="Brush_MenuSeparator" Color="#e8e8ea"/>

    <SolidColorBrush x:Key="Brush_MenuBackground_Default" Color="{StaticResource Color_MenuBackground_Default}"/>
    <SolidColorBrush x:Key="Brush_MenuBackground_Select" Color="{StaticResource Color_MenuBackground_Select}"/>
    <SolidColorBrush x:Key="Brush_MenuBorderbrush_Default" Color="{StaticResource  Color_MenuBorderbrush_Default}"/>

    <PathGeometry x:Key="Checkmark">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure StartPoint="0 2"
                            IsClosed="True"
                            IsFilled="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 4.8"/>
                            <LineSegment Point="2.5 7.4"/>
                            <LineSegment Point="7.1 2.8"/>
                            <LineSegment Point="7.1 0"/>
                            <LineSegment Point="2.5 4.6"/>
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="0 3"/>
        <Setter Property="SnapsToDevicePixels"
                Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        BorderBrush="{DynamicResource Brush_MenuSeparator}"
                        BorderThickness="0.5"/>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="ClassicBorder"
                Background="{DynamicResource Brush_MenuBackground_Default}"
                BorderBrush="{DynamicResource Brush_MenuBorderbrush_Default}"
                BorderThickness="1"
                >
            <DockPanel x:Name="ContentPanel">
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                <ContentPresenter
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Foreground"
                        Value="{DynamicResource Brush_MenuText_Select}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">

            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="ClassicBorder"
                                      Background="{DynamicResource Brush_MenuBackground_Select}"
                                      BorderBrush="{DynamicResource Brush_MenuBorderbrush_Default}"
                                      BorderThickness="0">
            <DockPanel>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                <ContentPresenter
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"/>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Placement="Bottom"
                       HorizontalOffset="-2"
                       IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       >
                    <Border Name="SubMenuBorder"
                            Background="{DynamicResource Brush_MenuBackground_Default}"
                            BorderBrush="{DynamicResource Brush_MenuBorderbrush_Default}"
                            BorderThickness="1">
                        <ScrollViewer Name="SubMenuScrollViewer"
                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle
                                        Name="OpaqueRect"
                                        Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                        Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                        Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                Grid.IsSharedSizeScope="true"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Foreground"
                        Value="{DynamicResource Brush_MenuText_Select}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">

            </Trigger>
            <Trigger Property="IsSubmenuOpen"
                     Value="true">

            </Trigger>
            <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">

            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource Brush_MenuText_Disable}"/>
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer"
                     Property="ScrollViewer.CanContentScroll"
                     Value="false" >
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Name="Bd"
                Padding="0 5"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="10"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                <TextBlock 
                        Name="CheckMark"
                        Visibility="Hidden"
                        Text="&#xE73E;" 
                        FontFamily="{StaticResource SegoeAssets}"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center" 
                        Foreground="{TemplateBinding Foreground}" 
                        FontSize="15" />
                <ContentPresenter
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="2,2,0,2"
                           DockPanel.Dock="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource Brush_MenuBackground_Select}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource Brush_MenuText_Select}"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{StaticResource Brush_MenuText_Disable}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <!--border添加padding撑起高度-->
        <Border Name="Bd"
                Padding="0 2"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="30"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                <TextBlock 
                        Name="CheckMark"
                        Visibility="Hidden"
                        Text="&#xE73E;" 
                        FontFamily="{StaticResource SegoeAssets}"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center" 
                        Foreground="{TemplateBinding Foreground}" 
                        FontSize="15" />
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"/>
                <TextBlock 
                        Grid.Column="3"
                        Text="&#xE00F;"
                        FontFamily="{StaticResource SegoeAssets}"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center" 
                        Foreground="{TemplateBinding Foreground}" 
                        FontSize="10" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Placement="Right"
                       VerticalOffset="-2"
                       IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Border Name="SubMenuBorder"
                            Background="{DynamicResource Brush_MenuBackground_Default}"
                            BorderBrush="{DynamicResource Brush_MenuBorderbrush_Default}"
                            BorderThickness="1"
                            >
                        <ScrollViewer Name="SubMenuScrollViewer"
                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle
                                        Name="OpaqueRect"
                                        Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                        Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                        Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                Grid.IsSharedSizeScope="true"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource Brush_MenuBackground_Select}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource Brush_MenuText_Select}"/>
            </Trigger>
            <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">

            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource Brush_MenuText_Disable}"/>
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer"
                     Property="ScrollViewer.CanContentScroll"
                     Value="false" >
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{DynamicResource Brush_MenuText_Default}"/>
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}"/>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Margin"
                        Value="0"/>
                <Setter Property="MaxHeight" Value="32"/>
                <Setter Property="Padding"
                        Value="10 8 10 0"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Margin"
                        Value="0"/>
                <Setter Property="Padding"
                        Value="4,1,5,2"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                <Setter Property="Padding"
                        Value="0,2,0,2"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                <Setter Property="Padding"
                        Value="0,2,0,2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">None</PopupAnimation>
    
    <!--右键菜单-->
    <Style x:Key="{x:Type ContextMenu}"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true"/>
        <Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both"/>
        <!--<Setter Property="VerticalOffset"
                Value="-40"/>
        <Setter Property="HorizontalOffset"
                Value="-20"/>-->
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Padding="0"
                            >
                        <Border BorderThickness="1"
                                BorderBrush="{StaticResource Brush_MenuSeparator}">
                            <!--<Border.Effect>
                                <DropShadowEffect Direction="270" 
                                                  BlurRadius="30"
                                                  ShadowDepth="10"
                                                  Color="#ddd"
                                                  x:Name="Shadow"/>
                            </Border.Effect>-->
                            <Border Background="White" ClipToBounds="True"
                                    Padding="0 5">
                                <StackPanel IsItemsHost="True"
                                            x:Name="SP"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" 
                                            />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="SP"
                                                            Storyboard.TargetProperty="Margin"
                                                            From="0 -100 0 0"
                                                            To="0"
                                                            Duration="0:0:0.5">
                                            <ThicknessAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>-->
                            <!--<Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SP"
                                                                        Storyboard.TargetProperty="Margin"
                                                                        >
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ContextMenu x:Key="CM_Playlist" >
        <MenuItem Header="下一首播放" Command="{Binding RemoveFromListCmd}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                    Path=PlacementTarget.SelectedItems}"/>
        <Separator/>
        <MenuItem Header="收藏" />
        <MenuItem Header="下载"/>
        <MenuItem Header="评论"/>
        <MenuItem Header="分享"/>
        <Separator/>
        <MenuItem Header="歌手"/>
        <MenuItem Header="专辑"/>
        <Separator/>
        <MenuItem Header="从歌单删除" Command="{Binding RemoveFromListCmd}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                    Path=PlacementTarget.SelectedItems}"/>
    </ContextMenu>
</ResourceDictionary>